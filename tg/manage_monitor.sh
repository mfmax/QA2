#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è Telegram –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º
# –û–ë–ù–û–í–õ–ï–ù–û: –ü–æ–¥–¥–µ—Ä–∂–∫–∞ —Ä–∞–±–æ—Ç—ã –∏–∑ –ø–æ–¥–ø–∞–ø–∫–∏ /tg

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
PROJECT_DIR="$(dirname "$SCRIPT_DIR")"

COLOR_RESET='\033[0m'
COLOR_GREEN='\033[0;32m'
COLOR_RED='\033[0;31m'
COLOR_YELLOW='\033[1;33m'
COLOR_BLUE='\033[0;34m'

print_header() {
    echo -e "${COLOR_BLUE}================================${COLOR_RESET}"
    echo -e "${COLOR_BLUE}$1${COLOR_RESET}"
    echo -e "${COLOR_BLUE}================================${COLOR_RESET}"
}

print_success() {
    echo -e "${COLOR_GREEN}‚úÖ $1${COLOR_RESET}"
}

print_error() {
    echo -e "${COLOR_RED}‚ùå $1${COLOR_RESET}"
}

print_warning() {
    echo -e "${COLOR_YELLOW}‚ö†Ô∏è  $1${COLOR_RESET}"
}

print_info() {
    echo -e "${COLOR_BLUE}‚ÑπÔ∏è  $1${COLOR_RESET}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
if [ ! -f "$SCRIPT_DIR/tg_monitor_realtime.py" ]; then
    print_error "–§–∞–π–ª tg_monitor_realtime.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
    print_info "–¢–µ–∫—É—â–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $SCRIPT_DIR"
    exit 1
fi

print_info "–†–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: $SCRIPT_DIR"
print_info "–ü—Ä–æ–µ–∫—Ç: $PROJECT_DIR"

show_menu() {
    print_header "–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ Telegram –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–æ–º"
    echo ""
    echo "1) üìö –û–±—Ä–∞–±–æ—Ç–∞—Ç—å –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞"
    echo "2) üî¥ –ó–∞–ø—É—Å—Ç–∏—Ç—å real-time –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    echo "3) üìä –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ real-time"
    echo "4) üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑ –ë–î"
    echo "5) üõë –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã"
    echo "6) üîß –¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è"
    echo "0) –í—ã—Ö–æ–¥"
    echo ""
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: " choice
    
    case $choice in
        1) process_history ;;
        2) start_realtime ;;
        3) show_logs ;;
        4) show_stats ;;
        5) stop_all ;;
        6) test_connection ;;
        0) exit 0 ;;
        *) print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!"; show_menu ;;
    esac
}

process_history() {
    print_header "–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞"
    echo ""
    read -p "–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 1000): " limit
    limit=${limit:-1000}
    
    print_info "–ó–∞–ø—É—Å–∫ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö $limit —Å–æ–æ–±—â–µ–Ω–∏–π..."
    cd "$SCRIPT_DIR"
    python tg_monitor.py --limit $limit
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
    show_menu
}

start_realtime() {
    print_header "Real-time –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥"
    echo ""
    echo "1) –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π —Ä–µ–∂–∏–º (–≤ —Ç–µ–∫—É—â–µ–º —Ç–µ—Ä–º–∏–Ω–∞–ª–µ)"
    echo "2) –§–æ–Ω–æ–≤—ã–π —Ä–µ–∂–∏–º (screen)"
    echo "3) –§–æ–Ω–æ–≤—ã–π —Ä–µ–∂–∏–º (tmux)"
    echo "0) –ù–∞–∑–∞–¥"
    echo ""
    read -p "–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∂–∏–º: " mode
    
    case $mode in
        1)
            print_info "–ó–∞–ø—É—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ..."
            print_warning "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏"
            sleep 2
            cd "$SCRIPT_DIR"
            python tg_monitor_realtime.py
            ;;
        2)
            if ! command -v screen &> /dev/null; then
                print_error "screen –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
                print_info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install screen"
            else
                print_info "–ó–∞–ø—É—Å–∫ –≤ screen..."
                cd "$SCRIPT_DIR"
                screen -dmS telegram-monitor python tg_monitor_realtime.py
                print_success "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ!"
                print_info "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: screen -r telegram-monitor"
                print_info "–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è: Ctrl+A, –∑–∞—Ç–µ–º D"
            fi
            ;;
        3)
            if ! command -v tmux &> /dev/null; then
                print_error "tmux –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
                print_info "–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt install tmux"
            else
                print_info "–ó–∞–ø—É—Å–∫ –≤ tmux..."
                cd "$SCRIPT_DIR"
                tmux new-session -d -s telegram-monitor "python tg_monitor_realtime.py"
                print_success "–ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∑–∞–ø—É—â–µ–Ω –≤ —Ñ–æ–Ω–µ!"
                print_info "–ü–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è: tmux attach -t telegram-monitor"
                print_info "–û—Ç–∫–ª—é—á–∏—Ç—å—Å—è: Ctrl+B, –∑–∞—Ç–µ–º D"
            fi
            ;;
        0)
            show_menu
            return
            ;;
        *)
            print_error "–ù–µ–≤–µ—Ä–Ω—ã–π –≤—ã–±–æ—Ä!"
            start_realtime
            return
            ;;
    esac
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
    show_menu
}

show_logs() {
    print_header "–õ–æ–≥–∏ real-time –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"
    echo ""
    
    LOG_FILE="$SCRIPT_DIR/tg_monitor_realtime.log"
    
    if [ ! -f "$LOG_FILE" ]; then
        print_warning "–§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        print_info "–í–æ–∑–º–æ–∂–Ω–æ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –µ—â—ë –Ω–µ –∑–∞–ø—É—Å–∫–∞–ª—Å—è"
    else
        echo "1) –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ 50 —Å—Ç—Ä–æ–∫"
        echo "2) –°–ª–µ–¥–∏—Ç—å –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ (tail -f)"
        echo "3) –û—Ç–∫—Ä—ã—Ç—å –≤–µ—Å—å —Ñ–∞–π–ª (less)"
        echo "0) –ù–∞–∑–∞–¥"
        echo ""
        read -p "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ: " choice
        
        case $choice in
            1)
                tail -n 50 "$LOG_FILE"
                ;;
            2)
                print_info "–ù–∞–∂–º–∏—Ç–µ Ctrl+C –¥–ª—è –≤—ã—Ö–æ–¥–∞"
                sleep 1
                tail -f "$LOG_FILE"
                ;;
            3)
                less "$LOG_FILE"
                ;;
            0)
                show_menu
                return
                ;;
        esac
    fi
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
    show_menu
}

show_stats() {
    print_header "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"
    echo ""
    
    DB_FILE="$PROJECT_DIR/qa_database.db"
    
    if [ ! -f "$DB_FILE" ]; then
        print_error "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!"
        print_info "–û–∂–∏–¥–∞–µ—Ç—Å—è: $DB_FILE"
    else
        print_info "–ó–∞–≥—Ä—É–∑–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏..."
        echo ""
        
        # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        total=$(sqlite3 "$DB_FILE" "SELECT COUNT(*) FROM qa_pairs WHERE source = 'tglawyers';")
        print_success "–í—Å–µ–≥–æ –ø–∞—Ä –∏–∑ Telegram: $total"
        
        # –ü–æ –¥–∞—Ç–∞–º
        echo ""
        print_info "–ü–æ –¥–∞—Ç–∞–º —Å–æ–∑–¥–∞–Ω–∏—è (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 7 –¥–Ω–µ–π):"
        sqlite3 -column -header "$DB_FILE" \
            "SELECT DATE(created_at) as date, COUNT(*) as pairs 
             FROM qa_pairs 
             WHERE source = 'tglawyers' 
             AND created_at >= datetime('now', '-7 days')
             GROUP BY DATE(created_at)
             ORDER BY date DESC;"
        
        # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–µ
        echo ""
        print_info "–ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø–∞—Ä:"
        sqlite3 -column "$DB_FILE" \
            "SELECT 
                substr(question, 1, 50) || '...' as question,
                datetime(created_at) as added
             FROM qa_pairs 
             WHERE source = 'tglawyers'
             ORDER BY created_at DESC
             LIMIT 5;"
    fi
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
    show_menu
}

stop_all() {
    print_header "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤"
    echo ""
    
    # –ü–æ–∏—Å–∫ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    print_info "–ü–æ–∏—Å–∫ –∑–∞–ø—É—â–µ–Ω–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞..."
    
    pids=$(pgrep -f "tg_monitor_realtime.py")
    
    if [ -z "$pids" ]; then
        print_warning "–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    else
        echo "–ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã: $pids"
        read -p "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —ç—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å—ã? (y/n): " confirm
        
        if [ "$confirm" = "y" ] || [ "$confirm" = "Y" ]; then
            for pid in $pids; do
                kill $pid 2>/dev/null && print_success "–ü—Ä–æ—Ü–µ—Å—Å $pid –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω" || print_error "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å $pid"
            done
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ screen —Å–µ—Å—Å–∏–π
    if command -v screen &> /dev/null; then
        screen_session=$(screen -ls | grep telegram-monitor)
        if [ ! -z "$screen_session" ]; then
            print_info "–ù–∞–π–¥–µ–Ω–∞ screen —Å–µ—Å—Å–∏—è: telegram-monitor"
            read -p "–ó–∞–≤–µ—Ä—à–∏—Ç—å screen —Å–µ—Å—Å–∏—é? (y/n): " confirm
            if [ "$confirm" = "y" ] || [ "$confirm" = "Y" ]; then
                screen -S telegram-monitor -X quit
                print_success "Screen —Å–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
            fi
        fi
    fi
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ tmux —Å–µ—Å—Å–∏–π
    if command -v tmux &> /dev/null; then
        tmux_session=$(tmux ls 2>/dev/null | grep telegram-monitor)
        if [ ! -z "$tmux_session" ]; then
            print_info "–ù–∞–π–¥–µ–Ω–∞ tmux —Å–µ—Å—Å–∏—è: telegram-monitor"
            read -p "–ó–∞–≤–µ—Ä—à–∏—Ç—å tmux —Å–µ—Å—Å–∏—é? (y/n): " confirm
            if [ "$confirm" = "y" ] || [ "$confirm" = "Y" ]; then
                tmux kill-session -t telegram-monitor
                print_success "Tmux —Å–µ—Å—Å–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
            fi
        fi
    fi
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
    show_menu
}

test_connection() {
    print_header "–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram"
    echo ""
    
    TEST_FILE="$SCRIPT_DIR/test_telegram_connection.py"
    
    if [ ! -f "$TEST_FILE" ]; then
        print_error "–§–∞–π–ª test_telegram_connection.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        print_info "–û–∂–∏–¥–∞–µ—Ç—Å—è: $TEST_FILE"
    else
        print_info "–ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤..."
        cd "$SCRIPT_DIR"
        python test_telegram_connection.py
    fi
    
    echo ""
    read -p "–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é..."
    show_menu
}

# –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞
clear
show_menu